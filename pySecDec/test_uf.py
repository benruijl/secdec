"""Unit tests for the U, F routines"""

from .uf import *
import sympy as sp
import unittest

class TestUF(unittest.TestCase):
    def test_box_1l(self):
        box_1l = uf(['k1'],['k1**2','(k1-p1)**2'])
        zerou = sp.sympify('-x(0) - x(1)') - box_1l[0]
        zerof = sp.sympify('-p1**2*x(0)*x(1)') - box_1l[1]
        zerou.simplify()
        zerof.simplify()
        self.assertEqual(zerou,0)
        self.assertEqual(zerof,0)

    def test_box_2l(self):
        box_2l = uf(['k1','k2'],
                    ['k1**2','(k1+p2)**2','(k1-p1)**2','(k1-k2)**2',
                    '(k2+p2)**2','(k2-p1)**2','(k2+p2+p3)**2'])
        zerou = sp.sympify('x(0)*x(3) + x(0)*x(4) + x(0)*x(5) + x(0)*x(6) + x(1)*x(3) +\
                            x(1)*x(4) + x(1)*x(5) + x(1)*x(6) + x(2)*x(3) + x(2)*x(4) +\
                            x(2)*x(5) + x(2)*x(6) + x(3)*x(4) + x(3)*x(5) + x(3)*x(6)') - box_2l[0]
        zerof = sp.sympify('p1**2*x(0)*x(2)*x(3) + p1**2*x(0)*x(2)*x(4) + p1**2*x(0)*x(2)*x(5) +\
                            p1**2*x(0)*x(2)*x(6) + p1**2*x(0)*x(3)*x(5) + p1**2*x(0)*x(4)*x(5) +\
                            p1**2*x(0)*x(5)*x(6) + p1**2*x(1)*x(2)*x(3) + p1**2*x(1)*x(2)*x(4) +\
                            p1**2*x(1)*x(2)*x(5) + p1**2*x(1)*x(2)*x(6) + p1**2*x(1)*x(3)*x(5) +\
                            p1**2*x(1)*x(4)*x(5) + p1**2*x(1)*x(5)*x(6) + p1**2*x(2)*x(3)*x(4) +\
                            p1**2*x(2)*x(3)*x(6) + p1**2*x(2)*x(4)*x(5) + p1**2*x(2)*x(5)*x(6) +\
                            p1**2*x(3)*x(4)*x(5) + p1**2*x(3)*x(5)*x(6) + 2*p1*p2*x(0)*x(4)*x(5) +\
                            2*p1*p2*x(0)*x(5)*x(6) + 2*p1*p2*x(1)*x(2)*x(3) +\
                            2*p1*p2*x(1)*x(2)*x(4) + 2*p1*p2*x(1)*x(2)*x(5) +\
                            2*p1*p2*x(1)*x(2)*x(6) + 2*p1*p2*x(1)*x(3)*x(5) +\
                            2*p1*p2*x(1)*x(4)*x(5) + 2*p1*p2*x(1)*x(5)*x(6) +\
                            2*p1*p2*x(2)*x(3)*x(4) + 2*p1*p2*x(2)*x(3)*x(6) +\
                            2*p1*p2*x(2)*x(4)*x(5) + 2*p1*p2*x(2)*x(5)*x(6) +\
                            2*p1*p2*x(3)*x(4)*x(5) + 2*p1*p2*x(3)*x(5)*x(6) +\
                            2*p1*p3*x(0)*x(5)*x(6) + 2*p1*p3*x(1)*x(5)*x(6) +\
                            2*p1*p3*x(2)*x(3)*x(6) + 2*p1*p3*x(2)*x(5)*x(6) +\
                            2*p1*p3*x(3)*x(5)*x(6) + p2**2*x(0)*x(1)*x(3) + p2**2*x(0)*x(1)*x(4) +\
                            p2**2*x(0)*x(1)*x(5) + p2**2*x(0)*x(1)*x(6) + p2**2*x(0)*x(3)*x(4) +\
                            p2**2*x(0)*x(3)*x(6) + p2**2*x(0)*x(4)*x(5) + p2**2*x(0)*x(5)*x(6) +\
                            p2**2*x(1)*x(2)*x(3) + p2**2*x(1)*x(2)*x(4) + p2**2*x(1)*x(2)*x(5) +\
                            p2**2*x(1)*x(2)*x(6) + p2**2*x(1)*x(3)*x(5) + p2**2*x(1)*x(4)*x(5) +\
                            p2**2*x(1)*x(5)*x(6) + p2**2*x(2)*x(3)*x(4) + p2**2*x(2)*x(3)*x(6) +\
                            p2**2*x(2)*x(4)*x(5) + p2**2*x(2)*x(5)*x(6) + p2**2*x(3)*x(4)*x(5) +\
                            p2**2*x(3)*x(5)*x(6) + 2*p2*p3*x(0)*x(3)*x(6) +\
                            2*p2*p3*x(0)*x(5)*x(6) + 2*p2*p3*x(1)*x(5)*x(6) +\
                            2*p2*p3*x(2)*x(3)*x(6) + 2*p2*p3*x(2)*x(5)*x(6) +\
                            2*p2*p3*x(3)*x(5)*x(6) + p3**2*x(0)*x(3)*x(6) + p3**2*x(0)*x(4)*x(6) +\
                            p3**2*x(0)*x(5)*x(6) + p3**2*x(1)*x(3)*x(6) + p3**2*x(1)*x(4)*x(6) +\
                            p3**2*x(1)*x(5)*x(6) + p3**2*x(2)*x(3)*x(6) + p3**2*x(2)*x(4)*x(6) +\
                            p3**2*x(2)*x(5)*x(6) + p3**2*x(3)*x(4)*x(6) + p3**2*x(3)*x(5)*x(6)') - box_2l[1]
        zerou.simplify()
        zerof.simplify()
        self.assertEqual(zerou,0)
        self.assertEqual(zerof,0)

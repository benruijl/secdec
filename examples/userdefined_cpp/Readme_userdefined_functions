There are 3 examples to show how the user can define additional (finite) functions, which are not included in the decomposition. They do not need to be analytic functions, they can also be procedures like e.g. jet clustering algorithms.

The functions can be defined as in the example dummyI.py:

functions = ['dum1', 'dum2'] declares the names of the additional functions.
The dependence of these functions on a number of arguments is given in 
remainder_expression = '(dum1(z0,z1,z2,z3) + 5*eps*z0)**(1+eps) * dum2(z0,z1,alf)**(2-6*eps)'

Which shows that both is possible: 
(a) explicit definitions in the python input files
(b) only the argument list is defined, the explicit definitions will be defined later in 
[process_directory]/src/functions.hpp 
A template for this file will be crated automatically together with the process_directory.
An example for a functions.hpp file is given by functions_dummy_sav.hpp.
The arguments are the ones that occur in the argument list of the function in dummyI.py, 
in the same order.
They can be both integration variables and parameters. 
Derivatives of the functions are only needed if higher than logarithmic poles are involved. 
'ddum1d0' means the first derivative of the function with name 'dum1' with respect to its first argument.

A mixture of (a) and (b) is also possible.

If the extra functions are simple, they can also be defined explicitly in the python input file 
in remainder_expression = '[define explicit function here]'
This is done in the example dummyII.py.

The example thetafunction.py shows how to define an extra non-analytic function like a theta-function acting on one of the integration parameters. In the python input file, it is defined as 
remainder_expression = 'cut1(z1,delt)'. Once the process directory is created, it should be defined in 
src/functions.hpp as exemplified in functions_theta_sav.hpp:
The first argument is z1, the second one is the cut parameter delt.
Therefore functions.hpp should contain the definition of the function cut1 as done in  functions_theta_sav.hpp.
  
